
==================== FINAL INTERFACE ====================
2016-05-22 10:00:36.253913 UTC

interface GameO_JUKfeG9vDe2B5gqv2wJwqD:GameOfLife.Ui.Text 7103
  interface hash: 525cdb344576920caf550b622acfdeb7
  ABI hash: 8c74406aae83dd8c34cebe111fd5b6e0
  export-list hash: 7e3c26920818b1a8ca95f6de5f7f22a2
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: cd55d7f81014886d73235b295e0fc5d9
  sig of: Nothing
  used TH splices: False
  where
exports:
  GameOfLife.Ui.Text.showGridEffective
module dependencies: GameOfLife
package dependencies: ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1
                      base-4.8.2.0* ghc-prim-0.4.0.0 integer-gmp-1.0.0.0
                      split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  GameOfLife ec51a663243e0730859ca1a01260a6c2
  exports: 8b9f54c3c647486b1909a379f3d63ad3
  RenderFunc 2ffdeecb7020d608868de00e7b9eb080
import  -/  ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1:System.Console.ANSI b9ceebd406bd61b44d2625b896f1cfde
import  -/  ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1:System.Console.ANSI.Common 672696d733d4705f78099c6075f6804d
import  -/  ansi-terminal-0.6.2.3@ansit_BDlVdfJGo3VHCIHxPTNjH1:System.Console.ANSI.Unix a337ae3aee71ac9000b889bf0b7c0b5e
import  -/  base-4.8.2.0:Control.Monad 480c5067477275068c9b98be08410df9
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 0248c1e850b7ea124cf7a2e1669ebf67
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  split-0.2.3.1@split_2IxbOPGrTSq7kFrJA7odmE:Data.List.Split 487cc1966f0f25916f1ba58bdff4b0ee
5a9d4592dcc6a14edcecf7652cfbc31d
  showGridEffective :: GameOfLife.RenderFunc
  {- Arity: 3, Strictness: <L,1*U><S,1*U><L,U>,
     Unfolding: InlineRule (0, True, True)
                GameOfLife.Ui.Text.showGridEffective1
                  `cast`
                (<GHC.Types.Bool>_R
                 ->_R <[[GHC.Types.Bool]]>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
b3c07ca4a0205a91b34a67eab6560f03
  showGridEffective1 ::
    GHC.Types.Bool
    -> [[GHC.Types.Bool]]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*U><S,1*U><L,U>,
     Unfolding: (\ ds :: GHC.Types.Bool
                   ds1 :: [[GHC.Types.Bool]]
                   eta :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ds1 of wild {
                   [] -> (# eta, GHC.Tuple.() #)
                   : ipv ipv1
                   -> case ds of wild1 {
                        GHC.Types.False
                        -> letrec {
                             a1 :: [[GHC.Types.Bool]]
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                               {- Arity: 2, Strictness: <S,1*U><L,U> -}
                             = \ ds2 :: [[GHC.Types.Bool]]
                                 eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                               case ds2 of wild2 {
                                 [] -> (# eta1, GHC.Tuple.() #)
                                 : y ys
                                 -> case (GameOfLife.Ui.Text.showGridEffective_go y)
                                           `cast`
                                         (Data.Monoid.NTCo:Any[0]) of wild3 {
                                      GHC.Types.False -> a1 ys eta1
                                      GHC.Types.True
                                      -> case Data.OldList.findIndex
                                                @ [GHC.Types.Bool]
                                                (GHC.Classes.$fEq[]_$c==
                                                   @ GHC.Types.Bool
                                                   GHC.Classes.$fEqBool
                                                   y)
                                                wild of wild4 {
                                           GHC.Base.Nothing -> a1 ys eta1
                                           GHC.Base.Just v
                                           -> case v of wild5 { GHC.Types.I# x ->
                                              case x of wild6 {
                                                DEFAULT
                                                -> case GHC.IO.Handle.Text.hPutStr2
                                                          GHC.IO.Handle.FD.stdout
                                                          (System.Console.ANSI.Unix.csi
                                                             (GHC.Types.:
                                                                @ GHC.Types.Int
                                                                (GHC.Types.I# (GHC.Prim.+# wild6 1))
                                                                GameOfLife.Ui.Text.showGridEffective3)
                                                             System.Console.ANSI.Unix.setCursorPositionCode1)
                                                          GHC.Types.False
                                                          eta1 of ds3 { (#,#) ipv2 ipv3 ->
                                                   case GHC.IO.Handle.Text.hPutStr2
                                                          GHC.IO.Handle.FD.stdout
                                                          System.Console.ANSI.Unix.clearLineCode
                                                          GHC.Types.False
                                                          ipv2 of ds4 { (#,#) ipv4 ipv5 ->
                                                   case GameOfLife.Ui.Text.showGridEffective2
                                                          (GHC.List.$w!!
                                                             @ [GHC.Types.Bool]
                                                             wild
                                                             wild6)
                                                          ipv4 of ds5 { (#,#) ipv6 ipv7 ->
                                                   a1 ys ipv6 } } }
                                                (-1) -> a1 ys eta1 } } } } }
                           } in
                           a1 wild eta
                        GHC.Types.True -> (# eta, GHC.Tuple.() #) } }) -}
9e64128e99f9e539a1ce37a8a23ea3b1
  showGridEffective2 ::
    [GHC.Types.Bool]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><L,U> -}
3591eff55d58490206b8fc0f57d5d068
  showGridEffective3 :: [GHC.Types.Int]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   GameOfLife.Ui.Text.showGridEffective4
                   (GHC.Types.[] @ GHC.Types.Int)) -}
bc68b8c30ef86e358d05f58b94105dd5
  showGridEffective4 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1) -}
7145dd8e97857a60800c8db817b1c860
  showGridEffective_go :: [GHC.Types.Bool] -> Data.Monoid.Any
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

